# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# templates: do not include prologs, 
# define table and sequence templates combining information from multiples packages
# services are initialized in Stntuple/fcl/stntuple_templates.fcl
# (1): services section (Services.SimAndReco and Services.Sim today are the same)
#       add time tracker template
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
# include-less clones on Production fcls with all templates
# assume that '_prolog' files don't have BEGIN_PROLOG/END_PROLOG clauses
#------------------------------------------------------------------------------
#include "Stntuple/fcl/production_jobconfig_common_prolog.fcl" 
#include "Stntuple/fcl/production_jobconfig_digitize_prolog.fcl" 
#include "Stntuple/fcl/production_jobconfig_primary_prolog.fcl"
#include "Stntuple/fcl/production_jobconfig_reco_prolog.fcl"   
#include "Stntuple/fcl/stntuple_templates.fcl"
#------------------------------------------------------------------------------
services : { @table::Services.SimAndReco 
    TimeTracker : {
	printSummary : true
# 	dbOutput : {
# 	    filename  : "timetracker.sqlite"
# 	    overwrite : false
# 	}
    }

    message                : { @table::default_message
	#destinations.log.noTimeStamps : true
    }
    
    RandomNumberGenerator  : { }

    SeedService            : { @table::automaticSeeds
	baseSeed           :    8
	maxUniqueEngines   :  100
    }

    GeometryService        : {
	bFieldFile         : "Offline/Mu2eG4/geom/bfgeom_v01.txt"
	inputFile          : "gaasG4/datasets/g002s03/geom_g002s03r04.txt"
	simulatedDetector  : { tool_type      : "ConstructGen4Setup" }
    }

    Mu2eG4Helper           : { }

    ConditionsService      : { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt"      }
    GlobalConstantsService : { inputFile      : "Offline/GlobalConstantsService/data/globalConstants_01.txt" }

    SeedService            : { @table::automaticSeeds
	baseSeed           :    8
	maxUniqueEngines   :  100
    }
    
} 

services.scheduler.wantSummary  : true
services.TFileService.fileName    : "nts._USER_._DATASET_._DSCONF_.sequencer.root" 

# Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit       : 10000
services.message.destinations.log.categories.ArtReport.timespan    : 300
# services.DbService : @local::DbEmpty
#------------------------------------------------------------------------------
# here come templates
#------------------------------------------------------------------------------
# include "Stntuple/fcl/trigger_templates.fcl"
# # onclude "Stntuple/fcl/mixing_templates.fcl"
#include "Stntuple/fcl/production_templates.fcl"
#include "Stntuple/fcl/stntuple_templates.fcl"
#------------------------------------------------------------------------------
# end templates
# (1): definition of the input module - can redefine in the top-level prolog
#------------------------------------------------------------------------------
source : { module_type : @local::INPUT_MODULE
    # reportFrequency : 1
    #    fileNames : ["/mu2e/data/tdr/beam/g4s4p5/tdr.beam.g4s4.conversion.1504a.15729672/good/00000/dsStopsToHitsConversion.root"]
    #    maxEvents   : -1
}
#------------------------------------------------------------------------------
# (2): definition of the output module
#------------------------------------------------------------------------------
outputs: {
    defaultOutput      : { module_type : RootOutput
	SelectEvents   : [ @sequence::TRIGGER_PATHS ]
	outputCommands : [ "keep *_*_*_*" ]
    }
    #    FullOutput : { @table::Mixing.Output  outputCommands : [ "keep *_*_*_*"                  ] }
    #    DetOutput  : { @table::Mixing.Output  outputCommands : [ @sequence::production.mixing_output ] }
}
#------------------------------------------------------------------------------
# lower case 'stntuple' is for inclusion
#------------------------------------------------------------------------------
stntuple : {
    producers: { 
	@table::EventGenerator.producers
	@table::Common.producers
	@table::Primary.producers
	@table::Digitize.producers
	@table::Reconstruction.producers
	@table::Stntuple.producers 
	# 
	compressDigiMCs : { @table::Digitize.producers.compressDigiMCs       # defined in Filters/fcl/
	    crvDigiMCTag         : ""
	}
    }

    filters  : { 
	@table::Common.filters
	@table::Primary.filters
	@table::Reconstruction.filters
	@table::Stntuple.filters   
    }

    analyzers: { 
	@table::Common.analyzers
	@table::Reconstruction.analyzers
	@table::Stntuple.analyzers 
    }
#------------------------------------------------------------------------------
# add trigger paths 
#------------------------------------------------------------------------------
    paths : { @table::Stntuple.paths }
#------------------------------------------------------------------------------
# final part - make sure 'trigger_paths' is aleways defined
# 'end_paths' defined in the top-level job configuration FCL's 
#------------------------------------------------------------------------------
    trigger_paths : [ @sequence::TRIGGER_PATHS ]
}
#------------------------------------------------------------------------------
# output event formats for different jobs
# 1. event format for mixing input
#------------------------------------------------------------------------------
# Beam.SimKeptProducts
#    "keep art::EventIDs_*_*_*",
#    "keep mu2e::GenParticles_*_*_*",
#    "keep mu2e::GenEventCount_*_*_*",
#    "keep mu2e::StatusG4_*_*_*"
#
# Digitize.TriggerProducts
#    "keep mu2e::KalSeeds_TT*_*_*",
#    "keep mu2e::HelixSeeds_TT*_*_*",
#    "keep mu2e::TimeClusters_TT*_*_*",
#    "keep mu2e::CaloClusters_CaloClusterFast_*_*",
#
# Digitize.DigiProducts
# Primary.KeptProducts
#
output_products : {
    gen_sim       : [ "drop    *_*_*_*"                                 ,
		      "keep    art::EventIDs_*_*_*"                     ,
		      "keep    mu2e::EventWeight_*_*_*"                 ,
		      "keep    mu2e::EventWindowMarker_EWMProducer_*_*" ,
		      "keep    mu2e::FixedTimeMap_*_*_*"                ,
		      "keep    mu2e::GenEventCount_*_*_*"               ,
		      "keep    mu2e::GenParticles_*_*_*"                ,
		      "keep    *_g4run_*_*"                             ,
		      "drop    mu2e::StepPointMCs_g4run_calorimeter_*"  ,
		      "drop    mu2e::StepPointMCs_g4run_calorimeterRO_*",
		      "keep    mu2e::CaloShowerSteps_*_*_*"
		     ]
#------------------------------------------------------------------------------
# 2. output format for digi files, no trigger
#------------------------------------------------------------------------------
    gen_sim_digi  : [ "drop    *_*_*_*"                                ,
		      "keep    *_compressDigiMCs_*_*"                  ,
		      "keep    mu2e::GenEventCount_*_*_*"              ,
		      "keep    mu2e::GenParticles_generate_photon_*"   ,
		      "keep    mu2e::StatusG4_g4run_*_*"               ,
		      "keep    mu2e::EventWeight_*_*_*"                ,
		      "keep    mu2e::EventWindowMarker_EWMProducer_*_*",
		      "keep    mu2e::FixedTimeMap_*_*_*"               ,
		      "keep    mu2e::CaloDigis_*CaloDigiFromShower_*_*",
		      "keep    mu2e::CrvDigis_CrvDigi_*_*"             ,
		      "keep    mu2e::ProtonBunchIntensity_*_*_*"       ,
		      "keep    mu2e::StrawDigis_makeSD_*_*"            
		     ]
#------------------------------------------------------------------------------
# 2. output format for digi files, w/trigger
#------------------------------------------------------------------------------
    gen_sim_digi_trig  : [ "drop    *_*_*_*"                                ,
			   "keep    *_compressDigiMCs_*_*"                  ,
			   "keep    mu2e::GenEventCount_*_*_*"              ,
			   "keep    mu2e::GenParticles_generate_photon_*"   ,
			   "keep    mu2e::StatusG4_g4run_*_*"               ,
			   "keep    mu2e::EventWeight_*_*_*"                ,
			   "keep    mu2e::EventWindowMarker_EWMProducer_*_*",
			   "keep    mu2e::FixedTimeMap_*_*_*"               ,
			   "keep    mu2e::CaloDigis_CaloDigiFromShower_*_*" ,
			   "keep    mu2e::CrvDigis_CrvDigi_*_*"             ,
			   "keep    mu2e::ProtonBunchIntensity_*_*_*"       ,
			   "keep    mu2e::StrawDigis_makeSD_*_*"            ,
			   
			   "keep    mu2e::TriggerInfo_*_*_*"                ,
			   "keep    art::TriggerResults_*_*_*"              ,
			   "keep    mu2e::KalSeeds_TT*_*_*"                 ,
			   "keep    mu2e::HelixSeeds_TT*_*_*"               ,
			   "keep    mu2e::TimeClusters_TT*_*_*"             ,
			   "keep    mu2e::CaloClusters_CaloClusterFast_*_*"
			  ]

    reco :                [
			  ]
}
#------------------------------------------------------------------------------
# output file names 
#------------------------------------------------------------------------------
services.TFileService.fileName            : "nts.user.stntuple.xxx.000000_00000000.root"
outputs.defaultOutput.fileName            : "sim.user.stntuple.xxx.000000_00000000.art"
#------------------------------------------------------------------------------
# this is it
#------------------------------------------------------------------------------
