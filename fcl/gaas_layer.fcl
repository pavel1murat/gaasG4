# -*- mode:tcl -*-
# fcl config file to perform Geant4 studies using the Mu2e framework infrastructure and simple geometry
#
# Original author K.L. Genser
#

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"

BEGIN_PROLOG
stepperout: {
    type: constant
    value: false
    write: "stepper"
}
END_PROLOG

#include "gaasG4/fcl/stntuple_gaas.fcl"


process_name : g4studyGaasLayer   # Give this job a name.

source : {
  module_type : EmptyEvent
  maxEvents : 100
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "gaas_layer.hist" }
  RandomNumberGenerator : { }

  GeometryService        : { 
      bFieldFile         : "Offline/Mu2eG4/geom/bfgeom_v01.txt"
      inputFile          : "gaasG4/geom/gaas_layer.txt"
      simulatedDetector  : { tool_type : "ConstructGaasLayer"}
  }

  ConditionsService      : { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Offline/GlobalConstantsService/data/globalConstants_01.txt" }
  Mu2eG4Helper           : { }
  SeedService            : @local::automaticSeeds
}

physics : {
    producers:  {
	#    generate : @local::generate
	generate: {
	    module_type          : EventGenerator
	    inputfile            : "gaasG4/fcl/alphaParticleGun.txt"
	    allowReplacement     : true
	    messageOnReplacement : true
	}

	g4run                :  { @table::g4run
	    # The line below causes a StepPointMC being stored for each step; comment it out to disable it
	    Mu2eG4SteppingOnlyCut : @local::stepperout
	    Mu2eG4StackingOnlyCut : @local::mu2eg4NoCut
	    # Mu2eG4CommonCut: { type: kineticEnergy cut: 1000000. }

	    physics : { @table::g4run.physics
		physicsListName : "QGSP_BERT"
		# bfieldMaxStep   : 500000.            # not implemented (no field)
	    }

	    TrajectoryControl : { @table::g4run.TrajectoryControl
		mcTrajectoryMinSteps      : 0
		mcTrajectoryMomentumCut   : 0.  # MeV/c
		saveTrajectoryMomentumCut : 0.  # MeV/c
		perVolumeMinDistance      : {}
	    }
	    
	    SDConfig: {
		enableSD         : []                      # not implemented
		TimeVD           : { times : [0.01] }
	    }

	    debug            :  { @table::g4run.debug
		# diagLevel         : 1
		# printElements     : true
		# worldVerbosityLevel : 2

		# fillDiagnosticHistograms : true
		writeGDML                : false # true
		GDMLFileName             : "gaas_layer.gdml"

		# checkFieldMap              : 0    # not implemented (no field)
		# printPhysicsProcessSummary : true
	    }

	    visualization : { @table::g4run.visualization 
		# initMacro : "Mu2eG4/test/visxz.mac"
		# initMacro : "Mu2eG4/test/vismqt.mac"
	    }
	}
	
	randomsaver          : @local::randomsaver
    }

    analyzers : {
	GaasLayerAna : { @table::StntupleTModuleFclDefaults              # defaults of the base class
	    module_type        : GaasLayerAna
	    g4ModuleLabel      : "g4run"
	    debugBits          : {}
	}
    } 

    p1 : [generate , g4run , randomsaver]
    #  e1 : [dumper, outfile]
    #  e1 : [outfile]
    e1 : [ GaasLayerAna ]

    trigger_paths  : [p1]
    end_paths      : [e1]
}

outputs:  {

  outfile : {
    module_type   :   RootOutput
      fileName    :   "gaas_layer.art"
  }

  dumper : {
      module_type              : FileDumperOutput
      wantProductFullClassName : true
  }

}
#------------------------------------------------------------------------------
# Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
#services.message.destinations.log.noTimeStamps : true

