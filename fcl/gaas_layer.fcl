# -*- mode:tcl -*-
# fcl config file to perform Geant4 studies using the Mu2e framework infrastructure and simple geometry
#
# Original author K.L. Genser
#

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"

BEGIN_PROLOG
stepperout: {
   type: constant
   value: false
   write: "stepper"
}
END_PROLOG

# Give this job a name.
process_name : g4study

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 100
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "gaas_layer.hist" }
  RandomNumberGenerator : { }

  GeometryService        : { inputFile      : "gaasG4/geom/gaas_layer.txt"  }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  G4Helper               : { }
  SeedService            : @local::automaticSeeds

}

physics : {
    producers:  {
	#    generate : @local::generate
	generate: {
	    module_type          : EventGenerator
	    inputfile            : "gaasG4/fcl/alphaParticleGun.txt"
	    allowReplacement     : true
	    messageOnReplacement : true
	}

	g4run :  @local::g4run
	randomsaver          : @local::randomsaver
    }

    filters : {
	GaasLayerAna : {
	    @table::StntupleModuleFclDefaults                   # defaults of the base class
	    module_type        : GaasLayerAna
	    g4ModuleLabel      : "g4run"
	    debugBits          : {}
	}
    } 

    p1 : [generate , g4run , GaasLayerAna, randomsaver]
    #  e1 : [dumper, outfile]
    #  e1 : [outfile]
    e1 : []

    trigger_paths  : [p1]
    end_paths      : [e1]
}

outputs:  {

  outfile : {
    module_type   :   RootOutput
      fileName      :   "gaas_layer.art"
  }

  dumper : {
      module_type              : FileDumperOutput
      wantProductFullClassName : true
  }

}
#------------------------------------------------------------------------------
# Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
#services.message.destinations.log.noTimeStamps : true
# inform the geometry service it is not the standard Mu2e Detector
services.GeometryService.standardMu2eDetector: false
#physics.producers.g4run.visualization.initMacro : "Mu2eG4/test/visxz.mac"
#physics.producers.g4run.visualization.initMacro : "Mu2eG4/test/vismqt.mac"

physics.producers.g4run.physics.physicsListName : "ShieldingM_MU2ER1"

# physics.producers.g4run.physics.bfieldMaxStep   : 500000. // not implemented (no field)
# physics.producers.g4run.debug.diagLevel         : 1
# physics.producers.g4run.debug.printElements     : true
# physics.producers.g4run.debug.worldVerbosityLevel : 2

physics.producers.g4run.debug.fillDiagnosticHistograms : true

#physics.producers.g4run.debug.checkFieldMap : 0 // not implemented (no field)
# physics.producers.g4run.debug.printPhysicsProcessSummary : true

physics.producers.g4run.debug.writeGDML    : false # true
physics.producers.g4run.debug.GDMLFileName : "gaas_layer.gdml"

physics.producers.g4run.TrajectoryControl.mcTrajectoryMinSteps:     0
physics.producers.g4run.TrajectoryControl.mcTrajectoryMomentumCut : 0. // MeV/c
physics.producers.g4run.TrajectoryControl.saveTrajectoryMomentumCut : 0.  // MeV/c
physics.producers.g4run.TrajectoryControl.perVolumeMinDistance : {}

#physics.producers.g4run.Mu2eG4CommonCut: { type: kineticEnergy cut: 1000000. }
physics.producers.g4run.SDConfig: {
    enableSD         : []                      # not implemented
    TimeVD           : { times: [0.01] }
}
# The line below causes a StepPointMC being stored for each step; comment it out to disable it
physics.producers.g4run.Mu2eG4SteppingOnlyCut : @local::stepperout
physics.producers.g4run.Mu2eG4StackingOnlyCut : @local::mu2eg4NoCut

